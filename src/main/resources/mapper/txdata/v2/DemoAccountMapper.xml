<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.tianxia.api.domain.txdata.v2.DemoAccountDao" >
  <resultMap id="BaseResultMap" type="com.cn.tianxia.api.project.v2.DemoAccountEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="cagent" property="cagent" jdbcType="VARCHAR" />
    <result column="accountcode" property="accountcode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, addtime, ip, cagent, accountcode
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_demo_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_demo_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.tianxia.api.project.v2.DemoAccountEntity" >
    insert into t_demo_account (id, username, password, 
      addtime, ip, cagent, 
      accountcode)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{addtime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, #{cagent,jdbcType=VARCHAR}, 
      #{accountcode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.tianxia.api.project.v2.DemoAccountEntity" >
    insert into t_demo_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="cagent != null" >
        cagent,
      </if>
      <if test="accountcode != null" >
        accountcode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="cagent != null" >
        #{cagent,jdbcType=VARCHAR},
      </if>
      <if test="accountcode != null" >
        #{accountcode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.tianxia.api.project.v2.DemoAccountEntity" >
    update t_demo_account
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="cagent != null" >
        cagent = #{cagent,jdbcType=VARCHAR},
      </if>
      <if test="accountcode != null" >
        accountcode = #{accountcode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.tianxia.api.project.v2.DemoAccountEntity" >
    update t_demo_account
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      cagent = #{cagent,jdbcType=VARCHAR},
      accountcode = #{accountcode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据试玩编码查询试玩账号信息 -->
  <select id="selectByAccountcode" resultMap="BaseResultMap">
  	select 
    	<include refid="Base_Column_List" />
    from t_demo_account
    where ACCOUNTCODE = #{accountcode} group by accountcode
  </select>
</mapper>