<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.tianxia.api.domain.txdata.v2.UserChannelDao">
  <resultMap id="BaseResultMap" type="com.cn.tianxia.api.project.v2.UserChannelEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="payment_id" jdbcType="INTEGER" property="paymentId" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="typeid" jdbcType="INTEGER" property="typeid" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
    <result column="dividend_rate" jdbcType="REAL" property="dividendRate" />
    <result column="coding_rate" jdbcType="REAL" property="codingRate" />
    <result column="solid_amount" jdbcType="VARCHAR" property="solidAmount" />
    <result column="solid_status" jdbcType="INTEGER" property="solidStatus" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, payment_id, cid, status, type, typeid, channel, dividend_rate, coding_rate, solid_amount, 
    solid_status, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_channel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user_channel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.tianxia.api.project.v2.UserChannelEntity">
    insert into t_user_channel (id, payment_id, cid, 
      status, type, typeid, 
      channel, dividend_rate, coding_rate, 
      solid_amount, solid_status, is_delete
      )
    values (#{id,jdbcType=INTEGER}, #{paymentId,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}, 
      #{channel,jdbcType=VARCHAR}, #{dividendRate,jdbcType=REAL}, #{codingRate,jdbcType=REAL}, 
      #{solidAmount,jdbcType=VARCHAR}, #{solidStatus,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.tianxia.api.project.v2.UserChannelEntity">
    insert into t_user_channel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paymentId != null">
        payment_id,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="typeid != null">
        typeid,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="dividendRate != null">
        dividend_rate,
      </if>
      <if test="codingRate != null">
        coding_rate,
      </if>
      <if test="solidAmount != null">
        solid_amount,
      </if>
      <if test="solidStatus != null">
        solid_status,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null">
        #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="dividendRate != null">
        #{dividendRate,jdbcType=REAL},
      </if>
      <if test="codingRate != null">
        #{codingRate,jdbcType=REAL},
      </if>
      <if test="solidAmount != null">
        #{solidAmount,jdbcType=VARCHAR},
      </if>
      <if test="solidStatus != null">
        #{solidStatus,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.tianxia.api.project.v2.UserChannelEntity">
    update t_user_channel
    <set>
      <if test="paymentId != null">
        payment_id = #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null">
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="dividendRate != null">
        dividend_rate = #{dividendRate,jdbcType=REAL},
      </if>
      <if test="codingRate != null">
        coding_rate = #{codingRate,jdbcType=REAL},
      </if>
      <if test="solidAmount != null">
        solid_amount = #{solidAmount,jdbcType=VARCHAR},
      </if>
      <if test="solidStatus != null">
        solid_status = #{solidStatus,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.tianxia.api.project.v2.UserChannelEntity">
    update t_user_channel
    set payment_id = #{paymentId,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      typeid = #{typeid,jdbcType=INTEGER},
      channel = #{channel,jdbcType=VARCHAR},
      dividend_rate = #{dividendRate,jdbcType=REAL},
      coding_rate = #{codingRate,jdbcType=REAL},
      solid_amount = #{solidAmount,jdbcType=VARCHAR},
      solid_status = #{solidStatus,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findAllByType" resultMap="BaseResultMap">
    select 
    	<include refid="Base_Column_List" />
    from t_user_channel
    where status=0 AND is_delete = 0 AND cid=#{cid} 
    AND typeid=#{typeId} AND channel=#{type}
    AND payment_id IN 
    <foreach collection="payIds" item="payIds" open="(" separator="," close=")">
    	#{payIds}
    </foreach>
    order by payment_id desc
  </select>
</mapper>